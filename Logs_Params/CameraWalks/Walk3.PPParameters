[General]
PostProcessing_ExpectedITOWAlignment=125
PostProcessing_ITOWAutoAlignThreshold=5
PostProcessing_ReportITOWAutoAlign=false
PostProcessing_ReportMissingITOWs=true
PostProcessing_ReportUnalignedITOWS=true
PostProcessing_StylusTipDistanceFromRoverA_Fallback=0.9
PostProcessing_TagIndicatingBeginningOfNewObject=New object
PostProcessing_TagIndicatingBeginningOfObjectPoints=RMB
PostProcessing_TagIndicatingEndOfObjectPoints=LMB
PostProcessing_StylusTipDistanceFromRoverA_Correction=0
PostProcessing_Lidar_TimeShift=80
PostProcessing_Lidar_Filtering_StartAngle=30
PostProcessing_Lidar_Filtering_EndAngle=330
PostProcessing_Lidar_Filtering_Quality_Pre=0.1
PostProcessing_Lidar_Filtering_Quality_Post=0.5
PostProcessing_Lidar_Filtering_DistanceLimit_Near=0.1
PostProcessing_Lidar_Filtering_DistanceLimit_Far=3
PostProcessing_Lidar_Filtering_DistanceDeltaLimit=0
PostProcessing_Lidar_Filtering_RelativeDistanceSlopeLimit=0
PostProcessing_Lidar_BoundingSphere_Center_N=0
PostProcessing_Lidar_BoundingSphere_Center_E=0
PostProcessing_Lidar_BoundingSphere_Center_D=0
PostProcessing_Lidar_BoundingSphere_Radius=10000
PostProcessing_AntennaLocations_Row0_Column0=2.650
PostProcessing_AntennaLocations_Row0_Column1=0
PostProcessing_AntennaLocations_Row0_Column2=-0.1265
PostProcessing_AntennaLocations_Row1_Column0=0
PostProcessing_AntennaLocations_Row1_Column1=-0.98
PostProcessing_AntennaLocations_Row1_Column2=-0.0565
PostProcessing_AntennaLocations_Row2_Column0=0
PostProcessing_AntennaLocations_Row2_Column1=0.98
PostProcessing_AntennaLocations_Row2_Column2=-0.0565
PostProcessing_Translation_N=0
PostProcessing_Translation_E=0
PostProcessing_Translation_D=0
PostProcessing_Transform_Row0_Column0=0
PostProcessing_Transform_Row0_Column1=1
PostProcessing_Transform_Row0_Column2=0
PostProcessing_Transform_Row0_Column3=0
PostProcessing_Transform_Row1_Column0=0
PostProcessing_Transform_Row1_Column1=0
PostProcessing_Transform_Row1_Column2=-1
PostProcessing_Transform_Row1_Column3=0
PostProcessing_Transform_Row2_Column0=-1
PostProcessing_Transform_Row2_Column1=0
PostProcessing_Transform_Row2_Column2=0
PostProcessing_Transform_Row2_Column3=0
PostProcessing_Transform_Row3_Column0=0
PostProcessing_Transform_Row3_Column1=0
PostProcessing_Transform_Row3_Column2=0
PostProcessing_Transform_Row3_Column3=1
PostProcessing_Replay_ReplaySpeed=1
PostProcessing_Replay_IntervalLimit=1
PostProcessing_Replay_Uptime_Min=0
PostProcessing_Replay_Uptime_Max=9223372036854775807
PostProcessing_Replay_Looping=false
PostProcessing_Stylus_Movie_Camera_N=-1
PostProcessing_Stylus_Movie_Camera_E=0
PostProcessing_Stylus_Movie_Camera_D=-0.05
PostProcessing_Stylus_Movie_LookAt_N=1
PostProcessing_Stylus_Movie_LookAt_E=0
PostProcessing_Stylus_Movie_LookAt_D=0
PostProcessing_Stylus_Movie_ITOW_Points_Min=0
PostProcessing_Stylus_Movie_ITOW_Points_Max=604800000
PostProcessing_Stylus_Movie_ITOW_Script_Min=0
PostProcessing_Stylus_Movie_ITOW_Script_Max=604800000
PostProcessing_Stylus_Movie_FPS=30
PostProcessing_Stylus_PointCloud_IncludeNormals=false
PostProcessing_Stylus_PointCloud_SeparateOutputFilesForSubScans=true
PostProcessing_LOSolver_Movie_ITOW_Script_Min=0
PostProcessing_LOSolver_Movie_ITOW_Script_Max=604800000
PostProcessing_LOSolver_Movie_Timestamps=1
PostProcessing_LOSolver_TransformMatrixScript="// In this case the camera was attached to a T-shaped rig used also for scanning objects.\n// Therefore also the antenna locations (in settings) differ from ones used in some other contexts\n// (like the rig used on youtube-videos https://youtu.be/JqIXpfskCg0 or https://youtu.be/4V6TXG68Qa0 (on the roof of a car))\n\n// First calculate coordinates for the \"camera eye\" (viewing reference point / origin)\n// relative to the camera's mounting point\n\n// Lens is 13 mm to the left of the mounting point of the camera (\"to west\")\ntranslate 0 -0.013 0;\n\n// Height of the center of the lens (29 mm)\ntranslate 0 0 -0.029;\n\n// There's about 1 mm washer under the camera:\ntranslate 0 0 -0.001;\n\n// Estimated viewing reference point is 32 mm to front from the mounting point. This really just a wild quess\ntranslate 0.032 0 0;\n// Based on the raster projections it may be less(?)\ntranslate -0.02 0 0;\n\n// Calibration:\nrotate pitch 1.75 deg;\nrotate yaw -0.7 deg;\nrotate roll -1 deg;\n\n// Now we can rotate the camera around the mounting point before moving it to the desired position\n// (This installation is facing right on the rig's coordinate system)\nrotate yaw 90 deg;\n\n// Move the camera to the mounting point (relative to the rig's origin)\n// It was attached to a slat connected to \"downward\"-section of the T-shaped-rig pointing right\n// (when looking \"down\" on the T... Ummm... clear as mud?)\n// ASCII-art (not in scale):\n//\n//            X                <- Antenna A\n//            |\n//            |\n//            |\n//            |---X          <- Camera here\n//            |\n//  X-------------X     <- x= Antennas B and C\n\ntranslate 1.150 0 0;\t// 1.150 m front\ntranslate 0 0.145 0;\t// 145 mm right\ntranslate 0 0 -0.038;\t// 38 mm up (3,5 cm tube + 3 mm slat)"
PostProcessing_Lidar_TransformMatrixScript_BeforeRotation=// No lidar attached in camera rig
PostProcessing_Lidar_TransformMatrixScript_AfterRotation=// No lidar attached in camera rig
PostProcessing_Lidar_PointCloud_IncludeNormals=true
PostProcessing_Lidar_PointCloud_NormalLengthAsQuality=true
PostProcessing_Lidar_PointCloud_SeparateOutputFilesForSubScans=true
PostProcessing_Lidar_Script_Uptime_Min=4365000
PostProcessing_Lidar_Script_Uptime_Max=4440000
PostProcessing_RasterCameras_TransformMatrixScript="// Rasters were not used in this project (scanning of the van is not part of this)\n// So these are not used. Leaving them here as an example.\n// These are same as on Location/orientation script-page.\n\n// In this case the camera was attached to a T-shaped rig used also for scanning objects.\n// Therefore also the antenna locations (in settings) differ from ones used in some other contexts\n// (like the rig used on youtube-videos https://youtu.be/JqIXpfskCg0 or https://youtu.be/4V6TXG68Qa0 (on the roof of a car))\n\n// First calculate coordinates for the \"camera eye\" (viewing reference point / origin)\n// relative to the camera's mounting point\n\n// Lens is 13 mm to the left of the mounting point of the camera (\"to west\")\ntranslate 0 -0.013 0;\n\n// Height of the center of the lens (29 mm)\ntranslate 0 0 -0.029;\n\n// There's about 1 mm washer under the camera:\ntranslate 0 0 -0.001;\n\n// Estimated viewing reference point is 32 mm to front from the mounting point. This really just a wild quess\ntranslate 0.032 0 0;\n// Based on the raster projections it may be less(?)\ntranslate -0.02 0 0;\n\n// Calibration:\nrotate pitch 1.75 deg;\nrotate yaw -0.7 deg;\nrotate roll -1 deg;\n\n// Now we can rotate the camera around the mounting point before moving it to the desired position\n// (This installation is facing right on the rig's coordinate system)\nrotate yaw 90 deg;\n\n// Move the camera to the mounting point (relative to the rig's origin)\n// It was attached to a slat connected to \"downward\"-section of the T-shaped-rig pointing right\n// (when looking \"down\" on the T... Ummm... clear as mud?)\n// ASCII-art (not in scale):\n//\n//            X                <- Antenna A\n//            |\n//            |\n//            |\n//            |---X          <- Camera here\n//            |\n//  X-------------X     <- x= Antennas B and C\n\ntranslate 1.150 0 0;\t// 1.150 m front\ntranslate 0 0.145 0;\t// 145 mm right\ntranslate 0 0 -0.038;\t// 38 mm up (3,5 cm tube + 3 mm slat)"
PostProcessing_RasterCameras_CameraScript="// Rasters were not used in this project (scanning of the van is not part of this)\n// So these are not used. Leaving them here as an example.\n\n// This outputs MeshLab-compatible (in .mpl-file's section) raster camera definitions\n\n// XML-section header\nWriteOutputString \" <RasterGroup>\\n\";\n\n// RasterItemOutputString is used for all images processed later.\nRasterItemOutputFormatString Set \"  <MLRaster label=\\\"%{FULLFILEPATH}\\\">\\n\";\n// Your VCGCamera-values may differ. I recommend setting a reference raster by hand in MeshLab and\n// cloning the line here, replacing the fields needed.\nRasterItemOutputFormatString Append \"   <VCGCamera TranslationVector=\\\"%{TRANSLATION_NEGATED_X} %{TRANSLATION_NEGATED_Y} %{TRANSLATION_NEGATED_Z} 1\\\" FocalMm=\\\"31.0\\\" CenterPx=\\\"2448 1836\\\" CameraType=\\\"0\\\" LensDistortion=\\\"0 0\\\" RotationMatrix=\\\"%{LINEAR_11} %{LINEAR_12} %{LINEAR_13} 0 %{LINEAR_21} %{LINEAR_22} %{LINEAR_23} 0 %{LINEAR_31} %{LINEAR_32} %{LINEAR_33} 0 0 0 0 1 \\\" BinaryData=\\\"0\\\" PixelSizeMm=\\\"0.00891736 0.00891736\\\" ViewportPx=\\\"4896 3672\\\"/>\\n\";\nRasterItemOutputFormatString Append \"   <Plane fileName=\\\"%{RELATIVEPATH}/%{FILENAME}\\\" semantic=\\\"1\\\"/>\\n\";\nRasterItemOutputFormatString Append \"  </MLRaster>\\n\";\n\n// Base- and relative paths can be defined separately to make it easier to handle relative paths in output\nBasePath set \"D:/GNSSStylusData/Logs/Van_210810/MeshLab\";\nRelativePath set \"Rasters_Used_GNSS_Synced\";\n\n// Reference image is used as a basis for date/time.\nReferenceTimeImage \"%{BASEPATH}/Rasters_Sync/DSC00597.JPG\" ITOW:233303500 uptime:331700;\n\n// TimeShift can be used to fix sync. You may like to use negative values here if, for example you\n// tend to move right after taking a photo. Then the location/orientation will be calculated from a time\n// before the actual EXIF-time. Also the resolution of the time here is only 1 s.\nTimeShift -1500;\n\n// This processes files matching the filter in the directory BasePath/RelativePath\n// My camera uses filenames formatted as DSCxxxxx.JPG\n// Timestamps used are ITOWs\nProcessStills DSC*.JPG itows;\n\n// XML-section ending tag\nWriteOutputString \" </RasterGroup>\";"
