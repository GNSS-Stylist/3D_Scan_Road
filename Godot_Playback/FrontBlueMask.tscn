[gd_scene load_steps=13 format=2]

[ext_resource path="res://MB100D_100kFaces_Blue_RigRemoved.tscn" type="PackedScene" id=1]

[sub_resource type="SpatialMaterial" id=1]
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CubeMesh" id=2]
material = SubResource( 1 )
size = Vector3( 1.685, 0.15, 0.025 )

[sub_resource type="SpatialMaterial" id=3]
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CubeMesh" id=4]
material = SubResource( 3 )
size = Vector3( 0.003, 0.1, 0.12 )

[sub_resource type="SpatialMaterial" id=5]
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CylinderMesh" id=6]
material = SubResource( 5 )
top_radius = 0.038
bottom_radius = 0.038
height = 0.018
rings = 1

[sub_resource type="GDScript" id=7]
script/source = "extends Spatial


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"

var replayTimeShift:int = 0

# Time to wait after valid lidar data before starting to rotate the lidar by itself:
export var idleRotationWaitTime:int = 1000

# Rotation speed of lidar when no data has come in the time defined above
export var idleRotationSpeed:float = 20.0
export var idleObeyPause:bool = false

var lastDataTime = 0
var lastDataTimeRotation:float = 0

var pauseStartUptime:int = 0
var totalPauseTime:int = 0


# Called when the node enters the scene tree for the first time.
func _ready():
	lastDataTime = OS.get_ticks_msec()


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	# TODO: This is a horrible mess, should refactor...
	var dataStorage = get_node(\"/root/Main/LidarDataStorage\")

	var currentReplayTime:int = get_node(\"/root/Main\").replayTime + replayTimeShift
	var itemIndex:int = 0
	
	if (dataStorage.beamData.size() > 0):
		itemIndex = dataStorage.beamDataKeys.bsearch(currentReplayTime, true)

	if (dataStorage.beamData.size() > 0) and (itemIndex < dataStorage.beamDataKeys.size()):
		var subItem = dataStorage.beamData[dataStorage.beamDataKeys[itemIndex]].back()
		lastDataTimeRotation = subItem.rotation
		self.rotation = Vector3(subItem.rotation, 0,0)
		lastDataTime = OS.get_ticks_msec()
	elif OS.get_ticks_msec() - lastDataTime > idleRotationWaitTime:
		if get_tree().paused and idleObeyPause:
			if pauseStartUptime == 0:
				pauseStartUptime = OS.get_ticks_msec()
			return
		elif pauseStartUptime != 0:
			totalPauseTime += OS.get_ticks_msec() - pauseStartUptime
			pauseStartUptime = 0
		var replaySpeed:float = get_node(\"/root/Main/Panel_UIControls/SpinBox_ReplaySpeed\").value
		var timediff:int = OS.get_ticks_msec() - lastDataTime - idleRotationWaitTime - totalPauseTime
		var rotationSubRound = (int(timediff * replaySpeed * idleRotationSpeed)) % 1000
		var rotationAngle:float = lastDataTimeRotation + (rotationSubRound / 1000.0 * (2.0 * PI))
		self.rotation = Vector3(rotationAngle, 0,0)





"

[sub_resource type="SpatialMaterial" id=8]
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CylinderMesh" id=9]
material = SubResource( 8 )
top_radius = 0.034
bottom_radius = 0.037
height = 0.023
rings = 1

[sub_resource type="SpatialMaterial" id=10]
albedo_color = Color( 0.560784, 0, 0, 1 )
metallic = 0.56
metallic_specular = 0.35
emission_enabled = true
emission = Color( 0.807843, 0, 0.211765, 1 )
emission_energy = 3.0
emission_operator = 0
emission_on_uv2 = false

[sub_resource type="SphereMesh" id=11]
material = SubResource( 10 )
radius = 0.005
height = 0.005
radial_segments = 16
rings = 16
is_hemisphere = true

[node name="FrontBlueMask" type="Spatial"]

[node name="CrossBar_Blue" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.075, 0.012 )
mesh = SubResource( 2 )
material/0 = null

[node name="LidarMount_Blue" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 0.99945, 0.0331552, 0, -0.0331552, 0.99945, -0.015, -0.1, -0.002 )

[node name="Plate_Blue" type="MeshInstance" parent="LidarMount_Blue"]
transform = Transform( -1.62921e-07, 0, 1, 0, 1, -1.33227e-15, -1, 0, -1.62921e-07, 0, 0, 0 )
mesh = SubResource( 4 )
material/0 = null

[node name="Lidar_Blue" type="Spatial" parent="LidarMount_Blue/Plate_Blue"]
transform = Transform( -1, -3.25841e-07, 0, -5.30863e-14, 1.62921e-07, 1, -3.25841e-07, 1, -1.62921e-07, -3.49246e-09, 0, 0 )

[node name="Base_Blue" type="MeshInstance" parent="LidarMount_Blue/Plate_Blue/Lidar_Blue"]
transform = Transform( -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0, 1, -0.009, 0, 0 )
mesh = SubResource( 6 )
material/0 = null

[node name="Rotator_Blue" type="Spatial" parent="LidarMount_Blue/Plate_Blue/Lidar_Blue"]
transform = Transform( 1, 0, 0, 0, 0.999328, -0.0366437, 0, 0.0366437, 0.999328, -0.031, 0, 0 )
script = SubResource( 7 )

[node name="Cylinder_Blue" type="MeshInstance" parent="LidarMount_Blue/Plate_Blue/Lidar_Blue/Rotator_Blue"]
transform = Transform( -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0, 1, 0.004, 0, 0 )
mesh = SubResource( 9 )
material/0 = null

[node name="Eye" type="MeshInstance" parent="LidarMount_Blue/Plate_Blue/Lidar_Blue/Rotator_Blue"]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0.033 )
visible = false
mesh = SubResource( 11 )
material/0 = null

[node name="MB100D_RigRemoved_Blue" parent="." instance=ExtResource( 1 )]
transform = Transform( 0.343, 0.005, -0.939, -0.077, 0.997, -0.023, 0.936, 0.081, 0.342, 0.005, -0.9, 2.645 )
